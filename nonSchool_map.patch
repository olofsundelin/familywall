*** a/src/components/CalendarGrid.js
--- b/src/components/CalendarGrid.js
@@
-            {/* 2) Övriga “vanliga” event */}
-            {nonSchool.map((event, idx) => {
-              const { icon, color } = getEventStyle(event.summary);
-              const startStr = event.start?.dateTime || event.start?.date || event.start;
-              const borderColor = colorFor(event.source); // t.ex. 'skola24', 'ics', 'birthday'
-              return (
-                <div
-                  key={`e-${idx}`}
-                  className="event"
-                  style={{ backgroundColor: color, borderLeft: `4px solid ${borderColor}` }}
-                  title={event.source}
-                >
-                  <div className="event-meta">
-                    {!event.summary?.startsWith('🎂') && (
-                      <span className="event-time">{timeStr(startStr)}</span>
-                    )}
-                    {icon && <span className="event-icon">{icon}</span>}
-                  </div>
-                  <div className="event-title">{event.summary}</div>
-                </div>
-              );
-            })}
+            {/* 2) Övriga “vanliga” event */}
+            {nonSchool.map((event, idx) => {
+              const { icon, color } = getEventStyle(event.summary);
+              const startStr = event.start?.dateTime || event.start?.date || event.start;
+              const borderColor = colorFor(event.source); // t.ex. 'skola24', 'ics', 'birthday'
+              return (
+                <div
+                  key={`e-${idx}`}
+                  className="event"
+                  style={{ backgroundColor: color, borderLeft: `4px solid ${borderColor}` }}
+                  title={event.source}
+                >
+                  <div className="event-meta">
+                    {!event.summary?.startsWith('🎂') && (
+                      <span className="event-time">{timeStr(startStr)}</span>
+                    )}
+                    {icon && <span className="event-icon">{icon}</span>}
+
+                    {event.location && (
+                      <button
+                        className="event-locbtn"
+                        title={event.location}
+                        onClick={(e) => {
+                          e.stopPropagation();
+                          setMapOverlay({
+                            open: true,
+                            title: event.summary || 'Plats',
+                            address: event.location,
+                            url: getMapsEmbedUrl(event.location),
+                            link: getMapsLink(event.location),
+                          });
+                        }}
+                        aria-label="Visa plats"
+                      >
+                        📍
+                      </button>
+                    )}
+                  </div>
+
+                  <div className="event-title">{event.summary}</div>
+                </div>
+              );
+            })}
